<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Member-Mapper">

	<sql id="search">
		<if test="searchType == 'm'.toString() ">
			and mno like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'i'.toString() ">
			and id like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'n'.toString() ">
			and name like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'p'.toString() ">
			and phone like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'e'.toString() ">
			and email like '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'j'.toString() ">
			and regdate between '${searchStartDate}' and '${searchEndDate}'
		</if>
		<if test="searchType == 'd'.toString() ">
			and departcode like '%'||#{departCode}||'%'
		</if>
	</sql>
	<!-- <sql id="date">
		<if test="datecri != null">
			and regdate between ${searchStartDate} and ${searchEndDate}
		</if>
		<if test="datecri == null"></if>
	</sql> -->

	<select id="selectSearchMemberList" resultType="member">
		select
		*
		from member
		where mno is not null
		<include refid="search" />
		order by regDate desc
	</select>
	
	<!-- <select id="selectSearchWithDateMemberList" resultType="member">
		select
		*
		from member
		where id is not null
		<include refid="date" />
		<include refid="search" />
		order by regDate desc
	</select> -->
	
	<select id="selectSearchMemberListCount" resultType="int">
		select count(*)
		from member
		where id is not null
		<include refid="date" />
		<include refid="search" />
	</select>
	<select id="selectMemberByMNO" parameterType="int" resultType="member">
		select
		*
		from member
		where mno=#{mno}
	</select>
	<select id="selectMemberSequenceNextValue" resultType="int">
		select member_seq.nextVal
		from dual
	</select>
	
	<update id="insertMember" parameterType="member">
		insert into
		member(mno, id, pwd, phone, name, departcode, joindate)
		values(#{mno},#{id},#{pwd},#{phone},#{name},#{departCode}, #{joinDate})
	</update>
	
	<update id="updateMember" parameterType="member">
		update member
		set
		id=#{id},pwd=#{pwd},email=#{email},phone=#{phone},departCode=#{departCode},
		updateDate=sysdate,rankCode=#{rankCode}
		
		<if test="state != null">
			,state=#{state}
		</if>
		<if test="leavedate != null">
			,leavedate=#{leaveDate}
		</if>
		
		where mno=#{mno}
	</update>
	
	<update id="deleteMember" parameterType="int">
		delete
		from member
		where mno=#{mno}
	</update>




</mapper>